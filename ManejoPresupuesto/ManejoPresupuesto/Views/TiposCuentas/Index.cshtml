@model IEnumerable<TipoCuenta>
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Tipos Cuentas";
}
<h1>Tipos cuentas</h1>
<h5>El tipo cuenta se refuere como podemos agrupar cuentas.</h5>
<a asp-action="crear" class="btn btn-primary-mb-3" >Crear Nuevo</a>


<table class="table">

    <thead>
        <tr>
            <th>
                acciones
            </th>
            <th>
                Nombre
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach ( var tipocuenta in Model )
        {
            <tr>
                <td>
                    <input type="hidden"  value="@tipocuenta.Id" class="ids" />
                    <a class="btn btn-primary">
                        Editar
                    </a>
                    <a class="btb btn-danger" asp-action="Borrar" asp-route-id="@tipocuenta">
                        Borrar
                    </a>

                </td>
                <td>
                    @tipocuenta.Nombre
                </td>
            </tr>
        }
    </tbody>

</table>
@section Script{
    <script>
        $(funtion(){
            $("#reordenable").sortable();
            stop: async funtion(e, ui){
            await actualizarOrdenes();
                await enviarIdsAlBackend(Ids);

            }
           async funtion actualizarOrdenes(){
                const ids = $(".ids").map(funtion(){
                    return $(this).val();
                }).get();
               await enviarIdsAlBackend(ids);
            }
             async function enviarIdsAlBackend(ids){
                var data = JSON.stringify(ids);
                 await fetch(urlOrdenar, {
                     method:'Post',
                     body: data,
                     headers:{
                         'Content-Type':'application/json'
                     }
                 })
            }
        })
        const urlOrdenar = '@Url.Action("ordenar")';

    </script>
}